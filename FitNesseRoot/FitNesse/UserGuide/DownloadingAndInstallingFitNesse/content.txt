!2 Downloading and Installing FitNesse
It really takes very little time and effort to get FitNesse running on your machine.
 1 Go to !style_code(http://fitnesse.org/FrontPage.FitNesseDevelopment.DownLoad) and click on the most recent !style_code(fitnesse.jar) file.
  * If this is a brand new installation, just put it in some convenient empty directory.
  * If this is an update, then copy it on top of the old fitnesse.jar in your current installation.
 2 Type !style_code(java -jar fitnesse.jar)
  * It will ask you to be patient as it installs or updates.
  * When it's done, it will ask you to reload fitnesse.  Type !style_code(java -jar fitnesse.jar) again.
  * Your shell should respond with something like this:
   !img http://files/images/fitnessestarted.png
 3 Start up a browser and go to !style_code(http://localhost)
 4 The main FitNesse screen should come up. That's it. You're ready to start using FitNesse.

!3 It didn't work!
Most likely you have another web server running.  Web servers default to port 80, so if another one is running on your machine you'll have to specify another port via a CommandLineOption.  Try this command:
 !style_code(java -jar fitnesse.jar -p 8080)

Then point your browser to !style_code(http://localhost:8080)

Still no?  Check out FitNesseWontStart for some more tips.

!2 Learning More
If you have not yet done so, check out the TwoMinuteExample. To learn more about what FitNesse acceptance testing is all about, see AcceptanceTests.  If you are ready to start creating FitNesse pages and test tables, check out EditingFitNessePages and CreatingTestTables.

!2 Memory Issues.
With the 20090320 release, some operations in !-FitNesse-! take more than the default memory allocated to the JVM.  This can cause tests to fail for ''out of heap space'' reasons.  You can fix this by adding the !style_code(!--Xmx100M-!) JVM argument to the java command line when you start !-FitNesse-!.  !style_code(!-java -Xmx100M -jar fitnesse.jar-!).

!3 Memory issues and the build.
If you build !-FitNesse-! from source, the ant script may fail for ''out of heap space'' reasons.  You can fix this by setting the !style_code(ANT_OPTS) environment variable to !style_code(!--Xmx100M-!).

